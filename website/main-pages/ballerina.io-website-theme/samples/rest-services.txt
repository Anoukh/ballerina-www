// Simple example of a POST REST API  that
// accepts a string and uses it in its response

// Import package with HTTP functions
import ballerina/net.http;

// Create a listener endpoint on a specific port
endpoint http:ServiceEndpoint listener {
    port:9090
};

// Create an HTTP service bound to the endpoint
@http:ServiceConfig{
    basePath : "/"
}
service<http:Service> hello bind listener{ 
    // Create a REST resource within the API
    @http:ResourceConfig{
        path : "/",
        methods : ["POST"]
    }

    // Parameters include a reference to the caller endpoint
    // and a struct with the request data
    hi (endpoint caller, http:Request request) {
        // Create empty response struct
        http:Response res = {};
        // Try to retrieve parameters
        var  payload = request.getStringPayload();
        // Different handling depending on whether we got a proper string
        // or not
        match payload {
            string name => {res.setStringPayload("Hello " + name + "!\n");}
            error err => {res.setStringPayload("Failed to retrieve string payload.\n");}
            null err => {res.setStringPayload("Failed to retrieve string payload.\n");}
        }     
        // Return response, '->' signifies remote call, '_' means ignore the function return value
        _ = caller -> respond (res);
    }
}