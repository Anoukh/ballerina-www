{
    "docs": [
        {
            "location": "/quick-tour/", 
            "text": "Quick Tour\n\n\nNow that you know \na little bit about Ballerina\n, let's take it for a spin! \n\n\nInstall Ballerina\n\n\n\n\nGo to http://www.ballerinalang.org and click \nDownload\n. \n\n\nDownload the Ballerina Tools distribution and unzip it on your computer. Ballerina Tools includes the Ballerina runtime plus the visual editor (Composer) and other tools. \n\n\nAdd the \nballerina_home\n/bin\n directory to your $PATH environment variable so that you can run the Ballerina commands from anywhere. \n\n\n\n\n\n\nNOTE: Throughout this documentation, \nballerina_home\n refers to the Ballerina directory you just installed. \n\n\n\n\nRun HelloWorld\n\n\nThe HelloWorld sample will show you how easy it is to run Ballerina, send it a request, and get a response. \n\n\nLet's take a look at what the sample looks like in the Ballerina programming language:\n\n\nimport ballerina.lang.system;\nfunction main (string[] args) {\n  system:println(\nHello, World!\n);\n}\n\n\n\n\nThe HelloWorld sample doesn't take any specific input, so simply running it will cause it to print \"Hello, World!\" at the command line.\n\n\nAt the command prompt, navigate to the \nballerina_home\n/samples/helloWorld\n directory and enter the following line:\n\n\nballerina run main helloworld.bal\n\n\n\n\nYou will see the following response:\n\n\nHello, World!\n\n\n\n\nYou just started Ballerina, ran the HelloWorld sample, and got a response within seconds. \n\n\nPretty simple and straightforward, right? Now, let's look at something a little more interesting: the Composer.\n\n\nRun the Composer\n\n\n\n\n\n\nAt the command prompt, type \ncomposer\n.\n\n\n\n\n\n\nAccess the Composer from the following URL in your browser: http://localhost:9091\n\n\nThe welcome page of Ballerina Composer appears. \n\n\n\n\nLet's open a sample and take a look around. \n\n\n\n\n\n\nClick \nechoService\n.\n\n\nThe Echo Service program displays in the Composer.\n\n\n\n\n\n\n\n\nNotice that on the left you have a tool palette containing the various constructs that you'll use to build your integration. On the right, you have a visual editor with a canvas onto which you drag those constructs. This is where you build your sequence diagrams that define your integration logic. \n\n\nAlso notice in the lower right corner the \nSource View\n and \nSwagger View\n buttons. \n\n\n\n\n\n\nClick \nSource View\n. \n\n\n\n\nYou'll see the source code editor that represents the sequence diagram as code in the Ballerina language. You can go back and forth between the visual editor and the source code and make your edits in either place. \n\n\n\n\n\n\nClick \nSwagger View\n. \n\n\n\n\nThis editor allows you to write Swagger definitions to create services.\n\n\n\n\n\n\nClick \nDesign View\n to return to the visual editor. \n\n\n\n\n\n\nNow that you've had a look around, it's time to take the leap and \nwrite your first Ballerina program\n.", 
            "title": "Quick tour"
        }, 
        {
            "location": "/quick-tour/#quick-tour", 
            "text": "Now that you know  a little bit about Ballerina , let's take it for a spin!", 
            "title": "Quick Tour"
        }, 
        {
            "location": "/quick-tour/#install-ballerina", 
            "text": "Go to http://www.ballerinalang.org and click  Download .   Download the Ballerina Tools distribution and unzip it on your computer. Ballerina Tools includes the Ballerina runtime plus the visual editor (Composer) and other tools.   Add the  ballerina_home /bin  directory to your $PATH environment variable so that you can run the Ballerina commands from anywhere.     NOTE: Throughout this documentation,  ballerina_home  refers to the Ballerina directory you just installed.", 
            "title": "Install Ballerina"
        }, 
        {
            "location": "/quick-tour/#run-helloworld", 
            "text": "The HelloWorld sample will show you how easy it is to run Ballerina, send it a request, and get a response.   Let's take a look at what the sample looks like in the Ballerina programming language:  import ballerina.lang.system;\nfunction main (string[] args) {\n  system:println( Hello, World! );\n}  The HelloWorld sample doesn't take any specific input, so simply running it will cause it to print \"Hello, World!\" at the command line.  At the command prompt, navigate to the  ballerina_home /samples/helloWorld  directory and enter the following line:  ballerina run main helloworld.bal  You will see the following response:  Hello, World!  You just started Ballerina, ran the HelloWorld sample, and got a response within seconds.   Pretty simple and straightforward, right? Now, let's look at something a little more interesting: the Composer.", 
            "title": "Run HelloWorld"
        }, 
        {
            "location": "/quick-tour/#run-the-composer", 
            "text": "At the command prompt, type  composer .    Access the Composer from the following URL in your browser: http://localhost:9091  The welcome page of Ballerina Composer appears.    Let's open a sample and take a look around.     Click  echoService .  The Echo Service program displays in the Composer.     Notice that on the left you have a tool palette containing the various constructs that you'll use to build your integration. On the right, you have a visual editor with a canvas onto which you drag those constructs. This is where you build your sequence diagrams that define your integration logic.   Also notice in the lower right corner the  Source View  and  Swagger View  buttons.     Click  Source View .    You'll see the source code editor that represents the sequence diagram as code in the Ballerina language. You can go back and forth between the visual editor and the source code and make your edits in either place.     Click  Swagger View .    This editor allows you to write Swagger definitions to create services.    Click  Design View  to return to the visual editor.     Now that you've had a look around, it's time to take the leap and  write your first Ballerina program .", 
            "title": "Run the Composer"
        }
    ]
}